# Nginx Reverse Proxy Configuration Example for Hashcat Server
# Save this in /etc/nginx/sites-available/ and create a symlink to /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name hashcat.example.com;  # Replace with your domain
    
    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name hashcat.example.com;  # Replace with your domain

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/hashcat.example.com/fullchain.pem;     # Replace with path to your certificate
    ssl_certificate_key /etc/letsencrypt/live/hashcat.example.com/privkey.pem;   # Replace with path to your key
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # WebSocket support (if needed)
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    
    # Increase upload size limit for large wordlists and hash files
    client_max_body_size 500M;
    
    # Proxy main location
    location / {
        proxy_pass http://127.0.0.1:8000;  # Change to the port your Hashcat server is running on
        proxy_buffering off;
        proxy_read_timeout 300s;
    }
    
    # Proxy static files without auth challenges
    location /static/ {
        proxy_pass http://127.0.0.1:8000/static/;
        proxy_cache_valid 200 1h;
        access_log off;
    }
}
